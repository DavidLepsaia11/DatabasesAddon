do 
begin
/*

საჟურნალო გატარების თანხების შედარება ყველა ბრენჩ ბაზასთან
ირჩევა კონსოლიდაციის ბაზა მარტო

1.0
პირველი ვერსია

1.2
ველების დამატება

*/

-- აქ უნდა ჩაიწეროს კონსოლიდაციის ბაზის სახელი
declare ConsBase nvarchar(100) = 'CONSBASESRGRE';


-- აქ ტექნიკური ცვლადებია
declare BranchBase nvarchar(100);

declare BranchBaseCount INT;
declare TempString nvarchar(1000) = '';

declare SqlStatementBranchCount nvarchar(5000);
declare SqlStatementBranchList nvarchar(5000);
declare SqlStatementMain nvarchar(9200);
declare SqlStatementUnionAll nvarchar(90000) = '' ;

declare i INTEGER;



-- დინამიური ქვერი ბრენჩების რაოდენობის დასათვლელად
SqlStatementBranchCount = ' ' ||
'select count(*) from (select distinct "OJDT"."U_SenderBranchCompany" from "' || ConsBase || '"."OJDT" ' ||
'	where "OJDT"."RefDate" >= ''2023-01-01'' ' ||
'	and "U_SenderBranchCompany" is not null)';


-- ბრენჩული ბაზების სიის ქვერი	
SqlStatementBranchList = ' ' ||
'select "U_SenderBranchCompany" ' ||
'	, ROW_NUMBER() OVER (ORDER BY "AbsLocTotal" DESC) AS "row_num" ' ||
'from ' ||
'( ' ||
'select "OJDT"."U_SenderBranchCompany" ' ||
'	, sum(abs("LocTotal")) "AbsLocTotal" ' ||
'from "' || ConsBase || '"."OJDT" ' ||
'where "OJDT"."RefDate" >= ''2023-01-01'' ' ||
'	and "U_SenderBranchCompany" is not null ' ||
'group by "OJDT"."U_SenderBranchCompany" ' ||
') "ConsOverview" ';




EXEC SqlStatementBranchCount INTO BranchBaseCount;

--
for i IN 1..BranchBaseCount do

EXEC 'select "U_SenderBranchCompany" from (' || :SqlStatementBranchList || ') "Table2" where "row_num" = ''' || i || '''' INTO BranchBase;

-- მთავარი ქვერი შედარების
SqlStatementMain = ' ' ||
'select * from' ||
'(' ||
'	select '
'		  ifnull("OJDT"."U_SenderBranchCompany", ''No Sender'') as "U_SenderBranchCompany"' ||
'		, ifnull("OJDT"."U_OriginalJdtNum", ''-7'') as "U_OriginalJdtNum"' ||
'		, sum("Debit") "Debit"' ||
'		, sum("Credit") "Credit"' ||
'		, count(7) "CntRows"' ||
'	from "' || ConsBase || '"."OJDT"' ||
'	left join ' ||
'		(select "TransId"' ||
'			, sum("Debit") "Debit"' ||
'			, sum("Credit") "Credit"' ||
'		from "' || ConsBase || '"."JDT1"' ||
'		Group By "TransId"' ||
'		) "JDT1Grouped" on "OJDT"."TransId" = "JDT1Grouped"."TransId"' ||
'	where "OJDT"."RefDate" >= ''2023-01-01''' ||
'	group by ifnull("OJDT"."U_SenderBranchCompany", ''No Sender'')' ||
'		, ifnull("OJDT"."U_OriginalJdtNum", ''-7'')	' ||
') "ConsBase"' ||
'full join' ||
'(' ||
'	select ''' || BranchBase || '''  ' ||
'		, "OJDT"."TransId"' ||
'		, "Debit"' ||
'		, "Credit"' ||
'		, to_date(TO_TIMESTAMP("OJDT"."RefDate")) "RefDate"' ||
'		, to_date(TO_TIMESTAMP("OJDT"."CreateDate")) "CreateDate"' ||
'		, "OJDT"."U_UpdateTS" "U_UpdateTS" ' ||
'		, "@RSM_ICSYNCLOG"."U_ErrorMessage" "SyncMessage"' ||
'		, to_date(TO_TIMESTAMP("@RSM_ICSYNCLOG"."U_CreateDate")) "SyncDate" ' ||
'		, "@RSM_ICUPDATELOG"."U_ErrorMessage" "UpdateMessage"' ||
'		, to_date(TO_TIMESTAMP("@RSM_ICUPDATELOG"."U_LogUpdateDateTime")) "LastUpdate" ' ||
'	from "' || BranchBase || '"."OJDT"' ||
'	left join "CONS_MANAGEMENT"."@RSM_ICSYNCLOG" on "CONS_MANAGEMENT"."@RSM_ICSYNCLOG"."U_ChildJdtNum" = "OJDT"."TransId"' ||
'			and "CONS_MANAGEMENT"."@RSM_ICSYNCLOG"."U_ChildCompany" = ''' || BranchBase || ''' ' ||
'			and "CONS_MANAGEMENT"."@RSM_ICSYNCLOG"."U_ParentCompany" = ''' || ConsBase || ''' ' ||
'	left join "CONS_MANAGEMENT"."@RSM_ICUPDATELOG" on "CONS_MANAGEMENT"."@RSM_ICUPDATELOG"."U_ChildJdtNum" = "OJDT"."TransId"' ||
'			and "CONS_MANAGEMENT"."@RSM_ICUPDATELOG"."U_ChildCompany" = ''' || BranchBase || ''' ' ||
'			and "CONS_MANAGEMENT"."@RSM_ICUPDATELOG"."U_ParentCompany" = ''' || ConsBase || ''' ' ||
'	left join ' ||
'		(select "TransId"' ||
'			, sum("Debit") "Debit"' ||
'			, sum("Credit") "Credit"' ||
'		from "' || BranchBase || '"."JDT1"' ||
'		Group By "TransId"' ||
'		) "JDT1Grouped" on "OJDT"."TransId" = "JDT1Grouped"."TransId"' ||
'	where "OJDT"."RefDate" >= ''2023-01-01''' ||
'	' ||
') "Branch" on "ConsBase"."U_SenderBranchCompany" = ''' || BranchBase || ''' and "ConsBase"."U_OriginalJdtNum" = "Branch"."TransId"' ||
'' ||
'where ("ConsBase"."U_SenderBranchCompany" = ''' || BranchBase || ''' or "ConsBase"."U_SenderBranchCompany" is null) ' ||
'	and (ifnull("ConsBase"."Debit", 0) <> ifnull("Branch"."Debit", 0) ' ||
'					or ifnull("ConsBase"."Credit", 0) <> ifnull("Branch"."Credit", 0))';



--TempString = TempString || '|' || BranchBase;

SqlStatementUnionAll = SqlStatementUnionAll || SqlStatementMain;

if i <> BranchBaseCount then
SqlStatementUnionAll = :SqlStatementUnionAll || ' Union All ';
end if;

end for;

--'order by "ConsBase"."U_OriginalJdtNum"' ||
--'	, "Branch"."TransId"';

--select 	:BranchBase from DUMMY; -- ტესტირებისთვის
--select 	:SqlStatementUnionAll from DUMMY; -- ტესტირებისთვის
--select 	:SqlStatementBranchList from DUMMY; -- ტესტირებისთვის
	
--select :SqlStatementBranchCount from dummy;	
--select :BranchBaseCount from DUMMY; -- ტესტირებისთვის


--select 	:SqlStatementMain from DUMMY; -- ტესტირებისთვის
execute immediate :SqlStatementUnionAll;		
		
end;
